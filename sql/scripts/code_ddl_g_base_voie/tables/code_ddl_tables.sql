/*
La table TA_AGENT regroupant les pnoms de tous les agents ayant travaillés et qui travaillent encore pour la base voie.
*/

-- 1. Création de la table TA_AGENT
CREATE TABLE G_BASE_VOIE.TA_AGENT(
    numero_agent NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    pnom VARCHAR2(50) NOT NULL,
    validite NUMBER(1) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_AGENT IS 'Table listant les pnoms de tous les agents ayant travaillés et qui travaillent encore pour la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_AGENT.numero_agent IS 'Numéro d''agent présent sur la carte de chaque agent.';
COMMENT ON COLUMN G_BASE_VOIE.TA_AGENT.pnom IS 'Pnom de l''agent, c''est-à-dire la concaténation de l''initiale de son prénom et de son nom entier.';
COMMENT ON COLUMN G_BASE_VOIE.TA_AGENT.validite IS 'Validité de l''agent, c''est-à-dire que ce champ permet de savoir si l''agent continue de travailler dans/pour la base voie ou non : 1 = oui ; 0 = non.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_AGENT 
ADD CONSTRAINT TA_AGENT_PK 
PRIMARY KEY("NUMERO_AGENT") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_AGENT TO G_ADMIN_SIG; 
/*
La table TA_FAMILLE regroupe toutes les familles des types détats et d''objets de la base base voie.
*/

-- 1. Création de la table TA_FAMILLE
CREATE TABLE G_BASE_VOIE.TA_FAMILLE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    valeur VARCHAR2(400) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_FAMILLE IS 'Table listant toutes les familles des types d''états et d''objets de la base base voie, ce qui permet de les catégoriser.';
COMMENT ON COLUMN G_BASE_VOIE.TA_FAMILLE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_FAMILLE.valeur IS 'Famille d''objets ou d''actions permettant de catégoriser un état ou un objet dans la base voie.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_FAMILLE 
ADD CONSTRAINT TA_FAMILLE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_FAMILLE TO G_ADMIN_SIG; 
/*
La table TA_FANTOIR regroupe tous les tronçons de la base voie.
*/

-- 1. Création de la table TA_FANTOIR
CREATE TABLE G_BASE_VOIE.TA_FANTOIR(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    code_fantoir CHAR(7)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_FANTOIR IS 'Table rassemblant tous les codes fantoirs issus du fichier fantoir et correspondants aux voies présentes sur le territoire de la MEL.';
COMMENT ON COLUMN G_BASE_VOIE.TA_FANTOIR.objectid IS 'Clé primaire auto-incrémentée de la table identifiant.';
COMMENT ON COLUMN G_BASE_VOIE.TA_FANTOIR.code_fantoir IS 'Code fantoir de chaque voie. Ce code est composé du code commune sur 3 caractère et de l''identifiant de la voie dans la commune. Attention cet identifiant est recyclé dans le fichier fantoir, ce champ ne doit donc jamais être utilisé en tant que clé primaire ou étrangère. Exemple : 3502153 pour une voie située dans Lille ; 0096870 pour une voie située dans Villeneuve-d''Ascq.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_FANTOIR 
ADD CONSTRAINT TA_FANTOIR_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 7. Création des index
CREATE INDEX TA_FANTOIR_CODE_FANTOIR_IDX ON G_BASE_VOIE.TA_FANTOIR(code_fantoir)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_FANTOIR TO G_ADMIN_SIG; 
/*
La table TA_LIBELLE regroupant tous les types et états permettant de catégoriser les objets de la base voie.
*/

-- 1. Création de la table TA_LIBELLE
CREATE TABLE G_BASE_VOIE.TA_LIBELLE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    valeur VARCHAR2(400) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_LIBELLE IS 'Table listant les types et états permettant de catégoriser les objets de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_LIBELLE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_LIBELLE.valeur IS 'Nom des types d''objets ou des états permettant de catégoriser les objets de la base voie. Ces libellés sont catégorisés par famille.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_LIBELLE 
ADD CONSTRAINT TA_LIBELLE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_LIBELLE TO G_ADMIN_SIG; 
/*
La table TA_RELATION_FAMILLE_LIBELLE regroupant tous les types et états permettant de catégoriser les objets de la base voie.
*/

-- 1. Création de la table TA_RELATION_FAMILLE_LIBELLE
CREATE TABLE G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_famille NUMBER(38,0) NOT NULL,
    fid_libelle NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE IS 'Table pivot permettant d''associer des libellés à des familles afin de catégoriser les états et les objets de la base voie. Exemple : La famille action dipose des libellés création, modification et suppression ; La famile genre dispose des libellés masculin, féminin et neutre.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE.fid_famille IS 'Clé étrangère vers la table TA_FAMILLE permettant d''associer une ou plusieurs familles à un ou plusieurs libellés afin de catégoriser les états et les objets de la base voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE.fid_libelle IS 'Clé étrangère vers la table TA_LIBELLE permettant d''associer un ou plusieurs libellés à une ou plusieurs familles, afin de catégoriser les états et les objets de la base voie.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE 
ADD CONSTRAINT TA_RELATION_FAMILLE_LIBELLE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE
ADD CONSTRAINT TA_RELATION_FAMILLE_LIBELLE_FID_FAMILLE_FK
FOREIGN KEY (fid_famille)
REFERENCES G_BASE_VOIE.ta_famille(objectid);

ALTER TABLE G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE
ADD CONSTRAINT TA_RELATION_FAMILLE_LIBELLE_FID_LIBELLE_FK
FOREIGN KEY (fid_libelle)
REFERENCES G_BASE_VOIE.ta_libelle(objectid);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RELATION_FAMILLE_LIBELLE_FID_FAMILLE_IDX ON G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE(fid_famille)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RELATION_FAMILLE_LIBELLE_FID_LIBELLE_IDX ON G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE(fid_libelle)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RELATION_FAMILLE_LIBELLE TO G_ADMIN_SIG; 
/*
La table TA_TRONCON regroupe tous les tronçons de la base voie.
*/

-- 1. Création de la table TA_TRONCON
CREATE TABLE G_BASE_VOIE.TA_TRONCON(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    geom SDO_GEOMETRY NOT NULL,
    date_saisie DATE NOT NULL,
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    date_modification DATE,
    fid_pnom_modification NUMBER(38,0),
    date_fin_validite DATE
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_TRONCON IS 'Table contenant les tronçons de la base voie. Les tronçons sont les objets de base de la base voie servant à constituer les rues qui elles-mêmes constituent les voies. Ancienne table : ILTATRC.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.objectid IS 'Clé primaire de la table identifiant chaque tronçon. Cette pk est auto-incrémentée et remplace l''ancien identifiant cnumtrc.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.geom IS 'Géométrie de type ligne simple de chaque tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.date_saisie IS 'date de saisie du tronçon (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.fid_pnom_saisie IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé un tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.date_modification IS 'Dernière date de modification du tronçon (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.fid_pnom_modification IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant modifié un tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON.date_fin_validite IS 'date de fin de validité du tronçon. Cette date correspond à la date d''invalidation du tronçon (cf. doc_dynmap_mhsuzanne.pdf p. 11 alinéa 2).';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_TRONCON 
ADD CONSTRAINT TA_TRONCON_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_TRONCON',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_TRONCON_SIDX
ON G_BASE_VOIE.TA_TRONCON(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=LINE, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_TRONCON
ADD CONSTRAINT TA_TRONCON_FID_PNOM_SAISIE_FK 
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_TRONCON
ADD CONSTRAINT TA_TRONCON_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 7. Création des index sur les clés étrangères
CREATE INDEX TA_TRONCON_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TA_TRONCON(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_TRONCON_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TA_TRONCON(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_TRONCON TO G_ADMIN_SIG; 
/*
La table TA_TRONCON_LOG regroupe toutes les évolutions des tronçons de la base voie situés dans TA_TRONCON.
*/

-- 1. Création de la table TA_TRONCON_LOG
CREATE TABLE G_BASE_VOIE.TA_TRONCON_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_troncon NUMBER(38,0) NOT NULL,
    fid_troncon_pere NUMBER(38,0),
    date_fin_validite DATE,
    fid_type_action NUMBER(38,0) NOT NULL,
    date_action DATE NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL,
    geom SDO_GEOMETRY NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_TRONCON_LOG IS 'Table d''historisation des actions effectuées sur les tronçons de la base voie. Cette table reprend notamment le champ fid_troncon_pere de l''ancienne table ILTAFILIA.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.fid_troncon IS 'Clé étrangère vers la table TA_TRONCON permettant de savoir sur quel tronçon ont été effectué les actions.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.fid_troncon_pere IS 'Clé étrangère vers la table TA_TRONCON permettant, en cas de coupure de tronçon, de savoir quel était le tronçon original.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.date_fin_validite IS 'Date de fin de validité du tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE permettant de catégoriser le type d''action effectué sur les tronçons.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.date_action IS 'date de saisie, modification et suppression du tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.fid_pnom IS 'Clé étrangère vers la table TA_AGENT permettant d''associer le pnom d''un agent au tronçon qu''il a créé, modifié ou supprimé.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TRONCON_LOG.geom IS 'Géométrie de type ligne simple de chaque tronçon.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_TRONCON_LOG 
ADD CONSTRAINT TA_TRONCON_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_TRONCON_LOG',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_TRONCON_LOG_SIDX
ON G_BASE_VOIE.TA_TRONCON_LOG(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=LINE, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_TRONCON_LOG
ADD CONSTRAINT TA_TRONCON_LOG_FID_TRONCON_FK
FOREIGN KEY (fid_troncon)
REFERENCES G_BASE_VOIE.ta_troncon(objectid);

ALTER TABLE G_BASE_VOIE.TA_TRONCON_LOG
ADD CONSTRAINT TA_TRONCON_LOG_FID_TRONCON_PERE_FK
FOREIGN KEY (fid_troncon_pere)
REFERENCES G_BASE_VOIE.ta_troncon(objectid);

ALTER TABLE G_BASE_VOIE.TA_TRONCON_LOG
ADD CONSTRAINT TA_TRONCON_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.ta_libelle(objectid);

ALTER TABLE G_BASE_VOIE.TA_TRONCON_LOG
ADD CONSTRAINT TA_TRONCON_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 7. Création des index sur les clés étrangères
CREATE INDEX TA_TRONCON_LOG_FID_TRONCON_IDX ON G_BASE_VOIE.TA_TRONCON_LOG(fid_troncon)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_TRONCON_LOG_FID_TRONCON_PERE_IDX ON G_BASE_VOIE.TA_TRONCON_LOG(fid_troncon_pere)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_TRONCON_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TA_TRONCON_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_TRONCON_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TA_TRONCON_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_TRONCON_LOG TO G_ADMIN_SIG; 
/*
La table TA_TYPE_VOIE regroupe tous les types de voies de la base voie tels que les avenues, boulevards, rues, senteir, etc.
*/

-- 1. Création de la table TA_TYPE_VOIE
CREATE TABLE G_BASE_VOIE.TA_TYPE_VOIE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    code_type_voie CHAR(4) NOT NULL,
    libelle VARCHAR2(50) NOT NULL   
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_TYPE_VOIE IS 'Table rassemblant tous les types de voies présents dans la base voie. Ancienne table : TYPEVOIE.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TYPE_VOIE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TYPE_VOIE.code_type_voie IS 'Code des types de voie présents dans la base voie. Ce champ remplace le champ CCODTVO.';
COMMENT ON COLUMN G_BASE_VOIE.TA_TYPE_VOIE.libelle IS 'Libellé des types de voie. Exemple : Boulevard, avenue, reu, sentier, etc.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_TYPE_VOIE 
ADD CONSTRAINT TA_TYPE_VOIE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 5. Création des index
CREATE INDEX TA_TYPE_VOIE_CODE_TYPE_VOIE_IDX ON G_BASE_VOIE.TA_TYPE_VOIE(code_type_voie)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_TYPE_VOIE TO G_ADMIN_SIG; 
/*
La table TA_VOIE regroupe tous les informations de chaque voie de la base voie.
*/

-- 1. Création de la table TA_VOIE
CREATE TABLE G_BASE_VOIE.TA_VOIE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_typevoie NUMBER(38,0) NOT NULL,
    fid_fantoir NUMBER(38,0) NOT NULL,
    numero_voie NUMBER(7,0),
    cote_commune CHAR(6),
    complement_nom_voie VARCHAR2(50),
    libelle_voie VARCHAR2(50) NOT NULL,
    fid_genre_voie NUMBER(38,0) NOT NULL,
    date_saisie DATE NOT NULL,
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    date_modification DATE,
    fid_pnom_modification NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_VOIE IS 'Table rassemblant toutes les informations pour chaque voie de la base. Ancienne table : VOIEVOI';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.objectid IS 'Clé primaire auto-incrémentée de la table. Elle remplace l''ancien identifiant ccomvoie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.fid_typevoie IS 'Clé étangère vers la table TA_TYPE_VOIE permettant de catégoriser les voies de la base.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.fid_fantoir IS 'Clé étrangère vers la table TA_FANTOIR permettant d''associer un code fantoir à chaque voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.numero_voie IS 'numéro de voie (commence par code insee)';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.cote_commune IS 'Côté de la voie appartenant à la commune (gauche/droite) Remplace les champs ';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.complement_nom_voie IS 'Complément du nom de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.libelle_voie IS 'Nom de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.fid_genre_voie IS 'Clé étrangère vers la table TA_LIBELLE permettant de connaître le genre du nom de la voie : masculin, féminin, neutre et non-identifié.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.date_saisie IS 'Date de saisie de la voie (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.fid_pnom_saisie IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé une voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.date_modification IS 'Date de modification de la voie (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE.fid_pnom_modification IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant modifié une voie.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_VOIE 
ADD CONSTRAINT TA_VOIE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_VOIE
ADD CONSTRAINT TA_VOIE_FID_TYPEVOIE_FK 
FOREIGN KEY (fid_typevoie)
REFERENCES G_BASE_VOIE.ta_type_voie(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE
ADD CONSTRAINT TA_VOIE_FID_FANTOIR_FK
FOREIGN KEY (fid_fantoir)
REFERENCES G_BASE_VOIE.ta_fantoir(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE
ADD CONSTRAINT TA_VOIE_FID_GENRE_VOIE_FK
FOREIGN KEY (fid_genre_voie)
REFERENCES G_BASE_VOIE.ta_libelle(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE
ADD CONSTRAINT TA_VOIE_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_VOIE
ADD CONSTRAINT TA_VOIE_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_VOIE_FID_TYPEVOIE_IDX ON G_BASE_VOIE.TA_VOIE(fid_typevoie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_FID_FANTOIR_IDX ON G_BASE_VOIE.TA_VOIE(fid_fantoir)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_FID_GENRE_VOIE_IDX ON G_BASE_VOIE.TA_VOIE(fid_genre_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TA_VOIE(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TA_VOIE(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_VOIE TO G_ADMIN_SIG; 
/*
La table TA_VOIE_LOG rassemble toutes les évolutions de chaque voie issue de TA_VOIE.
*/

-- 1. Création de la table TA_VOIE_LOG
CREATE TABLE G_BASE_VOIE.TA_VOIE_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_voie NUMBER(38,0) NOT NULL,
    fid_typevoie NUMBER(38,0) NOT NULL,
    fid_fantoir NUMBER(38,0) NOT NULL,
    numero_voie NUMBER(7,0),
    cote_commune CHAR(6),
    complement_nom_voie VARCHAR2(50),
    libelle_voie VARCHAR2(50) NOT NULL,
    fid_genre_voie NUMBER(38,0) NOT NULL,
    date_action DATE NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_VOIE_LOG IS 'Table rassemblant toutes les informations pour chaque voie de la base. Ancienne table : VOIEVOI';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.objectid IS 'Clé primaire auto-incrémentée de la table. Elle remplace l''ancien identifiant ccomvoie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.fid_typevoie IS 'Clé étangère vers la table TA_TYPE_VOIE permettant de catégoriser les voies de la base.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.fid_fantoir IS 'Clé étrangère vers la table TA_FANTOIR permettant d''associer un code fantoir à chaque voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.numero_voie IS 'numéro de voie (commence par code insee)';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.cote_commune IS 'Côté de la voie appartenant à la commune (gauche/droite). Ce champ remplace les champs CGPARITE et CDPARITE.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.complement_nom_voie IS 'Complément du nom de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.libelle_voie IS 'Nom de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.fid_genre_voie IS 'Clé étrangère vers la table TA_LIBELLE permettant de connaître le genre du nom de la voie : masculin, féminin, neutre et non-identifié.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.date_action IS 'Date de saisie, modification ou suppression de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE, permettant d''associer un type d''action à une voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LOG.fid_pnom IS 'Clé étrangère vers la table TA_AGENT permettant d''associer le pnom d''un agent à la voie qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_VOIE_LOG 
ADD CONSTRAINT TA_VOIE_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_VOIE_LOG
ADD CONSTRAINT TA_VOIE_LOG_FID_VOIE_FK 
FOREIGN KEY (fid_voie)
REFERENCES G_BASE_VOIE.ta_voie(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LOG
ADD CONSTRAINT TA_VOIE_LOG_FID_TYPE_ACTION_FK
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.ta_libelle(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LOG
ADD CONSTRAINT TA_VOIE_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_VOIE_LOG_FID_TYPEVOIE_IDX ON G_BASE_VOIE.TA_VOIE_LOG(fid_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LOG_FID_FANTOIR_IDX ON G_BASE_VOIE.TA_VOIE_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LOG_FID_GENRE_VOIE_IDX ON G_BASE_VOIE.TA_VOIE_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_VOIE_LOG TO G_ADMIN_SIG; 
/*
La table TA_RELATION_TRONCON_VOIE regroupant tous les types et états permettant de catégoriser les objets de la base voie.
*/

-- 1. Création de la table TA_RELATION_TRONCON_VOIE
CREATE TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_voie NUMBER(38,0) NOT NULL,
    fid_troncon NUMBER(38,0) NOT NULL,
    sens CHAR(1) NOT NULL,
    ordre_troncon NUMBER(2,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE IS 'Table pivot permettant d''associer les tronçons de la table TA_TRONCON à leur voie présente dans TA_VOIE. Ancienne table : VOIECVT.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE.fid_voie IS 'Clé étrangère vers la table TA_VOIE permettant d''associer une voie à un ou plusieurs tronçons. Ancien champ : CCOMVOI.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE.fid_troncon IS 'Clé étrangère vers la table TA_TRONCON permettant d''associer un ou plusieurs tronçons à une voie. Ancien champ : CNUMTRC.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE.sens IS 'Code permettant de connaître le sens du tronçon. Ancien champ : CCODSTR. A préciser avec Marie-Hélène, car les valeurs ne sont pas compréhensibles sans documentation.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE.ordre_troncon IS 'Ordre dans lequel les tronçons se positionnent afin de contituer la voie. 1 est égal au début de la voie et 1 + n est égal au tronçon suivant.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE 
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_FID_VOIE_FK
FOREIGN KEY (fid_voie)
REFERENCES G_BASE_VOIE.ta_voie(objectid);

ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_FID_TRONCON_FK
FOREIGN KEY (fid_troncon)
REFERENCES G_BASE_VOIE.ta_troncon(objectid);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RELATION_TRONCON_VOIE_FID_VOIE_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE(fid_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RELATION_TRONCON_VOIE_FID_TRONCON_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE(fid_troncon)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE TO G_ADMIN_SIG; 
/*
La table TA_RELATION_TRONCON_VOIE_LOG regroupant tous les types et états permettant de catégoriser les objets de la base voie.
*/

-- 1. Création de la table TA_RELATION_TRONCON_VOIE_LOG
CREATE TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_relation_troncon_voie NUMBER(38,0) NOT NULL,
    fid_voie NUMBER(38,0) NOT NULL,
    fid_troncon NUMBER(38,0) NOT NULL,
    date_action DATE NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG IS 'Table de log enregistrant l''évolution des associations voies / tronçons.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.fid_relation_troncon_voie IS 'Clé étrangère vers la table TA_RELATION_TRONCON_VOIE permettant d''identifier les relations tronçon/voies.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.fid_voie IS 'Identifiant des voies permettant d''associer une voie à un ou plusieurs tronçons. Ancien champ : CCOMVOI.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.fid_troncon IS 'Identifiant des tronçons permettant d''associer un ou plusieurs tronçons à une voie. Ancien champ : CNUMTRC.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.date_action IS 'Date de création, modification ou suppression de la voie avec ce tronçon.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE permettant de savoir quelle action a été effectuée sur l''association tronçon / voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG.fid_pnom IS 'Clé étrangère vers la table TA_AGENT permettant d''associer le pnom d''un agent à l''association voie / tronçon qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG 
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_LOG_FID_RELATION_TRONCON_VOIE_FK
FOREIGN KEY (fid_relation_troncon_voie)
REFERENCES G_BASE_VOIE.TA_RELATION_TRONCON_VOIE(objectid);

ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_LOG_FID_TYPE_ACTION_FK
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG
ADD CONSTRAINT TA_RELATION_TRONCON_VOIE_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RELATION_TRONCON_VOIE_LOG_FID_RELATION_TRONCON_VOIE_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG(fid_relation_troncon_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RELATION_TRONCON_VOIE_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RELATION_TRONCON_VOIE_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RELATION_TRONCON_VOIE_LOG TO G_ADMIN_SIG; 
/*
La table TA_RUE regroupe toutes les informations des rues de la base voie.
*/

-- 1. Création de la table TA_RUE
CREATE TABLE G_BASE_VOIE.TA_RUE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    libelle_rue VARCHAR2(100),
    nom VARCHAR2(100),
    code_insee CHAR(5),
    date_saisie DATE,
    fid_pnom_saisie NUMBER(38,0),
    date_modification DATE,
    fid_pnom_modification NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RUE IS 'Table regroupant toutes les rues de la MEL. La rue est le composée de plusieurs voies elles-mêmes composées de plusieurs tronçons. Schématiquement la rue c''est le concept, la voie c''est l''objet et les tronçons composent l''objet. Ancienne table : TA_RUE';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.libelle_rue IS 'Libellé de la rue (imposé par la commune).';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.nom IS 'Nom de la rue.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.code_insee IS 'Champ calculé via une requête spatiale, permettant d''associer à chaque rue le code insee de la commune dans laquelle elle se trouve (issue de la table G_REFERENTIEL.A_COMMUNES).';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.date_saisie IS 'Date de saisie de la rue (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.fid_pnom_saisie IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé une rue.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.date_modification IS 'Date de modification de la rue (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE.fid_pnom_modification IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant modifié une rue.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RUE 
ADD CONSTRAINT TA_RUE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RUE
ADD CONSTRAINT TA_RUE_FID_PNOM_SAISIE_FK 
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_RUE
ADD CONSTRAINT TA_RUE_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RUE_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TA_RUE(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RUE_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TA_RUE(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RUE TO G_ADMIN_SIG; 
/*
La table TA_RUE_LOG regroupe toutes les évolutions des informations des rues de TA_RUE.
*/

-- 1. Création de la table TA_RUE_LOG
CREATE TABLE G_BASE_VOIE.TA_RUE_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_rue NUMBER(38,0) NOT NULL,
    libelle_rue VARCHAR2(100) NOT NULL,
    nom VARCHAR2(100) NOT NULL,
    code_insee CHAR(5) NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    date_action DATE NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RUE_LOG IS '';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.fid_rue IS 'Clé étrangère vers la table TA_RUE permettant de savoirsur quelle rue ont été faites les actions.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.libelle_rue IS 'Libellé de la rue (imposé par la commune).';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.nom IS 'Nom de la rue.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.code_insee IS 'Champ calculé via une requête spatiale, permettant d''associer à chaque rue le code insee de la commune dans laquelle elle se trouve (issue de la table G_REFERENTIEL.A_COMMUNES).';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE, permettant d''associer un type d''action à une voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.date_action IS 'Date de saisie, modification ou suppression de la rue.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RUE_LOG.fid_pnom IS 'Clé étrangère vers la table TA_AGENT permettant d''associer le pnom d''un agent à la voie qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RUE_LOG 
ADD CONSTRAINT TA_RUE_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RUE_LOG
ADD CONSTRAINT TA_RUE_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.ta_libelle(objectid);

ALTER TABLE G_BASE_VOIE.TA_RUE_LOG
ADD CONSTRAINT TA_RUE_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RUE_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TA_RUE_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RUE_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TA_RUE_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RUE_LOG TO G_ADMIN_SIG; 
/*
La table TA_RELATION_RUE_VOIE regroupe toutes les associations voies/rues.
*/

-- 1. Création de la table TA_RELATION_RUE_VOIE
CREATE TABLE G_BASE_VOIE.TA_RELATION_RUE_VOIE(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_rue NUMBER(38,0) NOT NULL,
    fid_voie NUMBER(38,0) NOT NULL 
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RELATION_RUE_VOIE IS 'Table pivot permettant d''associer chaque rue à sa/ses voies. Ancienne table TA_RUEVOIE.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_RUE_VOIE.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_RUE_VOIE.fid_rue IS 'Clé étrangère vers la table TA_RUE permettant d''associer une rue à une ou plusieurs voies.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_RUE_VOIE.fid_voie IS 'Clé étrangère permettant d''associer une ou plusieurs voies à une rue.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RELATION_RUE_VOIE 
ADD CONSTRAINT TA_RELATION_RUE_VOIE_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RELATION_RUE_VOIE
ADD CONSTRAINT TA_RELATION_RUE_VOIE_FID_RUE_FK 
FOREIGN KEY (fid_rue)
REFERENCES G_BASE_VOIE.ta_rue(objectid);

ALTER TABLE G_BASE_VOIE.TA_RELATION_RUE_VOIE
ADD CONSTRAINT TA_RELATION_RUE_VOIE_FID_VOIE_FK
FOREIGN KEY (fid_voie)
REFERENCES G_BASE_VOIE.ta_voie(objectid);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RELATION_RUE_VOIE_FID_RUE_IDX ON G_BASE_VOIE.TA_RELATION_RUE_VOIE(fid_rue)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RELATION_RUE_VOIE_FID_VOIE_IDX ON G_BASE_VOIE.TA_RELATION_RUE_VOIE(fid_voie)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RELATION_RUE_VOIE TO G_ADMIN_SIG; 
/*
La table TA_INFOS_SEUIL regroupe le détail des seuils de la base voie.
*/

-- 1. Création de la table TA_INFOS_SEUIL
CREATE TABLE G_BASE_VOIE.TA_INFOS_SEUIL(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    numero_seuil NUMBER(5,0) NOT NULL,
    numero_parcelle CHAR(9) NOT NULL,
    complement_numero_seuil VARCHAR2(10),
    date_saisie DATE NOT NULL,
    fid_pnom_saisie NUMBER(38,0),
    date_modification DATE,
    fid_pnom_modification NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_INFOS_SEUIL IS 'Table contenant le détail des seuils, c''est-à-dire les numéros de seuil, de parcelles et les compléments de numéro de seuil. Cela permet d''associer un ou plusieurs seuils à un et un seul point géométrique au besoin.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.numero_seuil IS 'Numéro de seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.numero_parcelle IS 'Numéro de parcelle issu du cadastre.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.complement_numero_seuil IS 'Complément du numéro de seuil. Exemple : 1 bis';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.date_saisie IS 'Date de saisie des informations du seuil (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.fid_pnom_saisie IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé les informations d''un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.date_modification IS 'Date de modification des informations du seuil (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL.fid_pnom_modification IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant modifié les informations d''un seuil.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_INFOS_SEUIL 
ADD CONSTRAINT TA_INFOS_SEUIL_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_INFOS_SEUIL
ADD CONSTRAINT TA_INFOS_SEUIL_FID_PNOM_SAISIE_FK 
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_INFOS_SEUIL
ADD CONSTRAINT TA_INFOS_SEUIL_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_INFOS_SEUIL_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TA_INFOS_SEUIL(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_INFOS_SEUIL_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TA_INFOS_SEUIL(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_INFOS_SEUIL TO G_ADMIN_SIG; 
/*
La table TA_INFOS_SEUIL_LOG regroupe toutes les évlutions des objets présents dans la table TA_INFOS_SEUIL de la base voie.
*/

-- 1. Création de la table TA_INFOS_SEUIL_LOG
CREATE TABLE G_BASE_VOIE.TA_INFOS_SEUIL_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_infos_seuil NUMBER(38,0) NOT NULL,
    numero_seuil NUMBER(5,0) NOT NULL,
    numero_parcelle CHAR(9) NOT NULL,
    complement_numero_seuil VARCHAR2(10),
    date_action DATE NOT NULL,
    fid_type_action NUMBER(38,0) NOT NULL,
    fid_pnom NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_INFOS_SEUIL_LOG IS 'Table de log permettant d''enregistrer toutes les évlutions des objets présents dans la table TA_INFOS_SEUIL.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.fid_infos_seuil IS 'Identifiants de la table TA_INFOS_SEUIL, permettant d''associer les infos de chaque seuil à l''action qui a été faite dessus (création, modification, suppression).';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.numero_seuil IS 'Numéro de seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.numero_parcelle IS 'Numéro de parcelle issu du cadastre.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.complement_numero_seuil IS 'Complément du numéro de seuil. Exemple : 1 bis';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.date_action IS 'Date de chaque action effectuée sur les objets de la table TA_INFOS_SEUILS.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE permettant de catégoriser les actions effectuées sur la table TA_INFOS_SEUIL.';
COMMENT ON COLUMN G_BASE_VOIE.TA_INFOS_SEUIL_LOG.fid_pnom IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé, modifié ou supprimé des données dans TA_INFOS_SEUIL.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_INFOS_SEUIL_LOG 
ADD CONSTRAINT TA_INFOS_SEUIL_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_INFOS_SEUIL_LOG
ADD CONSTRAINT TA_INFOS_SEUIL_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.ta_libelle(objectid);

ALTER TABLE G_BASE_VOIE.TA_INFOS_SEUIL_LOG
ADD CONSTRAINT TA_INFOS_SEUIL_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_INFOS_SEUIL_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TA_INFOS_SEUIL_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_INFOS_SEUIL_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TA_INFOS_SEUIL_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_INFOS_SEUIL_LOG TO G_ADMIN_SIG; 
/*
La table TA_SEUIL regroupe tous les seuils de la base voie.
*/

-- 1. Création de la table TA_SEUIL
CREATE TABLE G_BASE_VOIE.TA_SEUIL(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_infos_seuil NUMBER(38,0) NOT NULL,
    cote_troncon CHAR(1),
    code_insee COMPUTED BY(
        SELECT
            b.code_insee
        FROM
            G_BASE_VOIE.TA_SEUIL a,
            G_REFERENTIEL.A_COMMUNE b
        WHERE
            SDO_CONTAINS(b.geom, a.geom) = 'TRUE'
        ),
    geom SDO_GEOMETRY,
    date_saisie DATE NOT NULL,
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    date_modification DATE,
    fid_pnom_modification NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_SEUIL IS 'Table contenant les seuils de la Base Voie. Plusieurs seuils peuvent se situer sur le même point géographique. Ancienne table : ILTASEU';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.objectid IS 'Clé primaire auto-incrémentée de la table identifiant chaque seuil. Cette pk remplace l''ancien identifiant idseui.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.fid_infos_seuil IS 'Clé étrangère vers la table TA_INFOS_SEUIL permettant d''associer un ou plusieurs seuils à un point géométrique.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.cote_troncon IS 'Côté du tronçon auquel est rattaché le seuil. G = gauche ; D = droite. En agglomération le sens des tronçons est déterminé par ses numéros de seuils. En d''autres termes il commence au niveau du seuil dont le numéro est égal à 1. Hors agglomération, le sens du tronçon dépend du sens de circulation pour les rues à sens unique. Pour les rues à double-sens chaque tronçon est doublé donc leur sens dépend aussi du sens de circulation;';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.code_insee IS 'Champ calculé via une requête spatiale, permettant d''associer à chaque rue le code insee de la commune dans laquelle elle se trouve (issue de la table G_REFERENTIEL.A_COMMUNES).';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.geom IS 'Géométrie de type point de chaque seuil présent dans la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.date_saisie IS 'date de saisie du seuil (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.fid_pnom_saisie IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.date_modification IS 'Dernière date de modification du seuil (via un trigger).';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL.fid_pnom_modification IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant modifié un seuil.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_SEUIL 
ADD CONSTRAINT TA_SEUIL_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_SEUIL',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_SEUIL_SIDX
ON G_BASE_VOIE.TA_SEUIL(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_SEUIL
ADD CONSTRAINT TA_SEUIL_FID_INFOS_SEUIL_FK 
FOREIGN KEY (fid_infos_seuil)
REFERENCES G_BASE_VOIE.TA_INFOS_SEUIL(objectid);

ALTER TABLE G_BASE_VOIE.TA_SEUIL
ADD CONSTRAINT TA_SEUIL_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.TA_AGENT(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_SEUIL
ADD CONSTRAINT TA_SEUIL_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.TA_AGENT(numero_agent);

-- 7. Création des index sur les clés étrangères
CREATE INDEX TA_SEUIL_FID_INFOS_SEUIL_IDX ON G_BASE_VOIE.TA_SEUIL(fid_infos_seuil)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_SEUIL_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TA_SEUIL(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_SEUIL_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TA_SEUIL(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_SEUIL TO G_ADMIN_SIG; 
/*
La table TA_SEUIL_LOG  permet d''avoir l''historique de toutes les évolutions des seuils de la base voie.
*/

-- 1. Création de la table TA_SEUIL_LOG
CREATE TABLE G_BASE_VOIE.TA_SEUIL_LOG(
    objectid NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    fid_seuil NUMBER(38,0) NOT NULL,
    fid_infos_seuil NUMBER(38,0) NOT NULL,
    cote_troncon CHAR(1),
    code_insee COMPUTED BY(
        SELECT
            b.code_insee
        FROM
            G_BASE_VOIE.TA_SEUIL a,
            G_REFERENTIEL.A_COMMUNE b
        WHERE
            SDO_CONTAINS(b.geom, a.geom) = 'TRUE'
        ),
    geom SDO_GEOMETRY,
    date_action DATE,
    fid_type_action NUMBER(38,0),
    fid_pnom NUMBER(38,0)
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_SEUIL_LOG IS 'Table de log de la table TA_SEUIL permettant d''avoir l''historique de toutes les évolutions des seuils.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.objectid IS 'Clé primaire auto-incrémentée de la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.fid_seuil IS 'Clé étrangère vers la table TA_SEUIL permettant de savoir sur quel seuil les actions ont été entreprises.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.fid_infos_seuil IS 'Identifiant de la table TA_INFOS_SEUIL permettant d''associer un ou plusieurs seuils à un point géométrique.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.cote_troncon IS 'Côté du tronçon auquel est rattaché le seuil. G = gauche ; D = droite. En agglomération le sens des tronçons est déterminé par ses numéros de seuils. En d''autres termes il commence au niveau du seuil dont le numéro est égal à 1. Hors agglomération, le sens du tronçon dépend du sens de circulation pour les rues à sens unique. Pour les rues à double-sens chaque tronçon est doublé donc leur sens dépend aussi du sens de circulation.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.code_insee IS 'Champ calculé via une requête spatiale, permettant d''associer à chaque rue le code insee de la commune dans laquelle elle se trouve (issue de la table G_REFERENTIEL.A_COMMUNES).';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.geom IS 'Géométrie de type point de chaque seuil présent dans la table.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.date_action IS 'Date de création, modification ou suppression d''un seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.fid_type_action IS 'Clé étrangère vers la table TA_LIBELLE permettant de savoir quelle action a été effectuée sur le seuil.';
COMMENT ON COLUMN G_BASE_VOIE.TA_SEUIL_LOG.fid_pnom IS 'Clé étrangère vers la table TA_AGENT permettant d''associer le pnom d''un agent au seuil qu''il a créé, modifié ou supprimé.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_SEUIL_LOG 
ADD CONSTRAINT TA_SEUIL_LOG_PK 
PRIMARY KEY("OBJECTID") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_SEUIL_LOG',
    'geom',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_SEUIL_LOG_SIDX
ON G_BASE_VOIE.TA_SEUIL_LOG(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX
PARAMETERS('sdo_indx_dims=2, layer_gtype=POINT, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- 6. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_SEUIL_LOG
ADD CONSTRAINT TA_SEUIL_LOG_FID_TYPE_ACTION_FK 
FOREIGN KEY (fid_type_action)
REFERENCES G_BASE_VOIE.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TA_SEUIL_LOG
ADD CONSTRAINT TA_SEUIL_LOG_FID_PNOM_FK
FOREIGN KEY (fid_pnom)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

-- 7. Création des index sur les clés étrangères
CREATE INDEX TA_SEUIL_LOG_FID_TYPE_ACTION_IDX ON G_BASE_VOIE.TA_SEUIL_LOG(fid_type_action)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_SEUIL_LOG_FID_PNOM_IDX ON G_BASE_VOIE.TA_SEUIL_LOG(fid_pnom)
    TABLESPACE G_ADT_INDX;

-- 8. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_SEUIL_LOG TO G_ADMIN_SIG; 
/*
La table TA_RELATION_TRONCON_SEUIL fait la relation entre les tronçons de la table TA_TRONCON et les seuils de la table TA_SEUIl qui s''y rattachent dans la base voie.
*/

-- 1. Création de la table TA_RELATION_TRONCON_SEUIL
CREATE TABLE G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL(
    fid_troncon NUMBER(38,0) NOT NULL,
    fid_seuil NUMBER(38,0) NOT NULL
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL IS 'Table pivot faisant la relation entre les tronçons de la table TA_TRONCON et les seuils de la table TA_SEUIl qui s''y rattachent. Ancienne table : ILTASIT.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL.fid_troncon IS 'Clé primaire et étrangère vers la table TA_TRONCON permettant d''asocier un tronçons aux seuils.';
COMMENT ON COLUMN G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL.fid_seuil IS 'Clé primaire et clé étrangère vers la table TA_SEUIL permettant d''associer un ou plusieurs seuils à un tronçon.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL 
ADD CONSTRAINT TA_RELATION_TRONCON_SEUIL_PK 
PRIMARY KEY("FID_TRONCON", "FID_SEUIL") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL
ADD CONSTRAINT TA_RELATION_TRONCON_SEUIL_FID_TRONCON_FK 
FOREIGN KEY (fid_troncon)
REFERENCES G_BASE_VOIE.TA_TRONCON(objectid);

ALTER TABLE G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL
ADD CONSTRAINT TA_RELATION_TRONCON_SEUIL_FID_SEUIL_FK
FOREIGN KEY (fid_seuil)
REFERENCES G_BASE_VOIE.TA_SEUIL(objectid);

-- 5. Création des index sur les clés étrangères
CREATE INDEX TA_RELATION_TRONCON_SEUIL_FID_TRONCON_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL(fid_troncon)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_RELATION_TRONCON_SEUIL_FID_SEUIL_IDX ON G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL(fid_seuil)
    TABLESPACE G_ADT_INDX;

-- 6. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_RELATION_TRONCON_SEUIL TO G_ADMIN_SIG; 
