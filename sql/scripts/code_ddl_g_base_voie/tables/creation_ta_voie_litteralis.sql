/*
La table TA_VOIE_LITTERALIS regroupe tous les informations de chaque voie de la base voie.
*/
/*
DROP TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS CASCADE CONSTRAINTS;
DELETE FROM USER_SDO_GEOM_METADATA WHERE TABLE_NAME = 'TA_VOIE_LITTERALIS';
*/
-- 1. Création de la table TA_VOIE_LITTERALIS
CREATE TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS(
    id_voie NUMBER(38,0) GENERATED BY DEFAULT AS IDENTITY,
    libelle_voie VARCHAR2(200) NOT NULL,
    insee VARCHAR2(4000),
    mesure_voie NUMBER,
    complement_nom_voie VARCHAR2(50),
    date_saisie DATE DEFAULT sysdate NOT NULL,
    date_modification DATE DEFAULT sysdate NOT NULL,
    fid_pnom_saisie NUMBER(38,0) NOT NULL,
    fid_pnom_modification NUMBER(38,0) NOT NULL,
    fid_typevoie NUMBER(38,0) NOT NULL,
    fid_genre_voie NUMBER(38,0) NOT NULL,
    fid_rivoli NUMBER(38,0) NULL,
    fid_metadonnee NUMBER(38,0) NULL,
    geom SDO_GEOMETRY
);

-- 2. Création des commentaires sur la table et les champs
COMMENT ON TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS IS 'Table rassemblant toutes les informations pour chaque voie de la base. Ancienne table : VOIEVOI';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.id_voie IS 'Clé primaire auto-incrémentée de la table. Elle remplace l''ancien identifiant ccomvoie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.libelle_voie IS 'Nom de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.insee IS 'Code INSEE de la voie. Ce code correspond à celui de la commune dans laquelle se situe le centroïde de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.mesure_voie IS 'Longueur de chaque voie en mètre.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.complement_nom_voie IS 'Complément du nom de la voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.date_saisie IS 'Date de saisie de la voie (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.date_modification IS 'Date de modification de la voie (par défaut la date du jour).';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.fid_pnom_saisie IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant créé une voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.fid_pnom_modification IS 'Clé étrangère vers la table TA_AGENT permettant de récupérer le pnom de l''agent ayant modifié une voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.fid_typevoie IS 'Clé étangère vers la table TA_TYPE_VOIE permettant de catégoriser les voies de la base.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.fid_genre_voie IS 'Clé étrangère vers la table TA_LIBELLE permettant de connaître le genre du nom de la voie : masculin, féminin, neutre et non-identifié.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.fid_rivoli IS 'Clé étrangère vers la table TA_RIVOLI permettant d''associer un code RIVOLI à chaque voie.';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.fid_metadonnee IS 'Clé étrangère vers la table G_GEO.TA_METADONNEE permettant de connaître la source des voies (MEL ou IGN).';
COMMENT ON COLUMN G_BASE_VOIE.TA_VOIE_LITTERALIS.geom IS 'Champ géométrique de chaque voie de type multiligne.';

-- 3. Création de la clé primaire
ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS 
ADD CONSTRAINT TA_VOIE_LITTERALIS_PK 
PRIMARY KEY("ID_VOIE") 
USING INDEX TABLESPACE "G_ADT_INDX";

-- 4. Création des métadonnées spatiales
INSERT INTO USER_SDO_GEOM_METADATA(
    TABLE_NAME, 
    COLUMN_NAME, 
    DIMINFO, 
    SRID
)
VALUES(
    'TA_VOIE_LITTERALIS',
    'GEOM',
    SDO_DIM_ARRAY(SDO_DIM_ELEMENT('X', 684540, 719822.2, 0.005),SDO_DIM_ELEMENT('Y', 7044212, 7078072, 0.005)), 
    2154
);
COMMIT;

-- 5. Création des clés étrangères
ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS
ADD CONSTRAINT TA_VOIE_LITTERALIS_FID_PNOM_SAISIE_FK
FOREIGN KEY (fid_pnom_saisie)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS
ADD CONSTRAINT TA_VOIE_LITTERALIS_FID_PNOM_MODIFICATION_FK
FOREIGN KEY (fid_pnom_modification)
REFERENCES G_BASE_VOIE.ta_agent(numero_agent);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS
ADD CONSTRAINT TA_VOIE_LITTERALIS_FID_TYPEVOIE_FK 
FOREIGN KEY (fid_typevoie)
REFERENCES G_BASE_VOIE.ta_type_voie(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS
ADD CONSTRAINT TA_VOIE_LITTERALIS_FID_GENRE_VOIE_FK
FOREIGN KEY (fid_genre_voie)
REFERENCES G_GEO.TA_LIBELLE(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS
ADD CONSTRAINT TA_VOIE_LITTERALIS_FID_RIVOLI_FK
FOREIGN KEY (fid_rivoli)
REFERENCES G_BASE_VOIE.ta_rivoli(objectid);

ALTER TABLE G_BASE_VOIE.TA_VOIE_LITTERALIS
ADD CONSTRAINT TA_VOIE_LITTERALIS_FID_METADONNEE_FK
FOREIGN KEY (fid_metadonnee)
REFERENCES G_GEO.ta_metadonnee(objectid);

-- 5. Création de l'index spatial sur le champ geom
CREATE INDEX TA_VOIE_LITTERALIS_SIDX
ON G_BASE_VOIE.TA_VOIE_LITTERALIS(GEOM)
INDEXTYPE IS MDSYS.SPATIAL_INDEX_V2
PARAMETERS('sdo_indx_dims=2, layer_gtype=MULTILINE, tablespace=G_ADT_INDX, work_tablespace=DATA_TEMP');

-- 6. Création des index sur les clés étrangères
CREATE INDEX TA_VOIE_LITTERALIS_FID_PNOM_SAISIE_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(fid_pnom_saisie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LITTERALIS_FID_PNOM_MODIFICATION_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(fid_pnom_modification)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LITTERALIS_FID_TYPEVOIE_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(fid_typevoie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LITTERALIS_FID_GENRE_VOIE_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(fid_genre_voie)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LITTERALIS_FID_RIVOLI_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(fid_rivoli)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LITTERALIS_FID_METADONNEE_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(fid_metadonnee)
    TABLESPACE G_ADT_INDX;
    
CREATE INDEX TA_VOIE_LITTERALIS_INSEE_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(insee)
    TABLESPACE G_ADT_INDX;

CREATE INDEX TA_VOIE_LITTERALIS_MESURE_VOIE_IDX ON G_BASE_VOIE.TA_VOIE_LITTERALIS(mesure_voie)
    TABLESPACE G_ADT_INDX;

-- 7. Affectation du droit de sélection sur les objets de la table aux administrateurs
GRANT SELECT ON G_BASE_VOIE.TA_VOIE_LITTERALIS TO G_ADMIN_SIG;

/

